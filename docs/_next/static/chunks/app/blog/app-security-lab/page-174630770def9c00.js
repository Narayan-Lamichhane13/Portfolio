(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[732],{7444:function(e,s,t){"use strict";t.d(s,{Z:function(){return a}});/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let a=(0,t(2898).Z)("Terminal",[["polyline",{points:"4 17 10 11 4 5",key:"akl6gq"}],["line",{x1:"12",x2:"20",y1:"19",y2:"19",key:"q2wloq"}]])},7949:function(e,s,t){Promise.resolve().then(t.bind(t,4249))},4249:function(e,s,t){"use strict";t.r(s),t.d(s,{default:function(){return o}});var a=t(7437),l=t(732);/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */let r=(0,t(2898).Z)("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]]);var n=t(9036),i=t(7444),c=t(1396),d=t.n(c);function o(){return(0,a.jsx)("div",{className:"min-h-screen bg-black",children:(0,a.jsxs)("div",{className:"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-20 pt-28",children:[(0,a.jsx)(d(),{href:"/blog",children:(0,a.jsxs)(l.E.button,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},className:"flex items-center gap-2 text-gray-400 hover:text-white transition-colors mb-8",children:[(0,a.jsx)(r,{className:"w-5 h-5"}),"Back to Blog"]})}),(0,a.jsxs)(l.E.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.6},className:"mb-12",children:[(0,a.jsxs)("div",{className:"flex items-center gap-3 mb-4",children:[(0,a.jsx)("div",{className:"p-3 bg-gradient-to-br from-red-500 to-orange-500 rounded-xl",children:(0,a.jsx)(n.Z,{className:"w-6 h-6 text-white"})}),(0,a.jsx)("span",{className:"text-sm text-gray-400 font-medium",children:"Application Security"})]}),(0,a.jsx)("h1",{className:"text-4xl md:text-5xl font-bold mb-4 text-white",children:"Application Security Lab — From Native Exploits to Web Attacks"}),(0,a.jsx)("p",{className:"text-lg text-gray-400",children:"A deep dive into real-world exploitation techniques, from stack overflows to web vulnerabilities"})]}),(0,a.jsxs)(l.E.article,{initial:{opacity:0},animate:{opacity:1},transition:{delay:.3},className:"prose prose-invert max-w-none",children:[(0,a.jsxs)(x,{title:"Goal & Threat Model",children:[(0,a.jsx)("p",{children:"The lab simulates real attack paths against vulnerable programs and web apps. The objective is to escalate control from simple input fields to full shell access and data exfiltration by chaining small, reliable primitives. I focused on:"}),(0,a.jsxs)("ul",{children:[(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"Native binaries (C/x86)"}),": stack/heap overflows, DEP/NX bypass (ret2libc/ret2syscall), unsafe unlink on heap."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{children:"Web apps (HTML/JS/SQL)"}),": SQL Injection, CSRF, and persistent XSS with stealth, spying, and robustness across filters."]})]})]}),(0,a.jsxs)(x,{title:"Part A — Native Binary Exploitation (C/x86)",children:[(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:"Tools & Setup"}),(0,a.jsxs)("p",{children:[(0,a.jsx)("code",{className:"text-purple-400",children:"gdb"})," (disassembly, breakpoints, memory maps), ",(0,a.jsx)("code",{className:"text-purple-400",children:"objdump/readelf/strings"})," (gadgets, symbol offsets), ",(0,a.jsx)("code",{className:"text-purple-400",children:"Python"})," (payload generators with struct.pack), and careful control of ASLR/DEP/PIE to understand constraints."]}),(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:"1) Stack Overflow 101: measure → build → verify"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Concept:"})," Overwrite the saved return address (RET) on the stack by copying more bytes than a local buffer can hold."]}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-6 mb-3",children:"Steps"}),(0,a.jsxs)("div",{className:"mb-6",children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:(0,a.jsx)("strong",{children:"Find buffer size & offset"})}),(0,a.jsxs)("p",{className:"text-gray-400 mb-3",children:["In ",(0,a.jsx)("code",{className:"text-purple-400",children:"vulnerable()"})," you'll see something like:"]}),(0,a.jsx)(h,{code:"sub $0x64, %esp  → buf = 0x64 = 100 bytes"}),(0,a.jsx)("p",{className:"text-gray-400 mt-2",children:"Offset to RET = buf size (100) + saved EBP (4) = 104."})]}),(0,a.jsxs)("div",{className:"mb-6",children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:(0,a.jsx)("strong",{children:"Craft payload"})}),(0,a.jsx)(h,{code:'Layout = b"A"*100 + b"B"*4 + <new RET>.\nInitially, use a NOP sled + shellcode and point RET into the sled.'})]}),(0,a.jsxs)("div",{className:"mb-6",children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:(0,a.jsx)("strong",{children:"Verify in gdb"})}),(0,a.jsx)(h,{code:"Break at vulnerable, run with payload, then x/i $eip after crash/stop\nto ensure EIP lands where you expect."})]}),(0,a.jsxs)("div",{className:"bg-zinc-900 border border-zinc-800 rounded-lg p-4 my-6",children:[(0,a.jsx)("p",{className:"text-sm text-gray-400 mb-2",children:(0,a.jsx)("strong",{className:"text-white",children:"Why it works:"})}),(0,a.jsx)("p",{className:"text-gray-400",children:"strcpy/gets/sprintf do no bounds check; exceeding the local buffer overwrites control data."}),(0,a.jsx)("p",{className:"text-sm text-gray-400 mt-3 mb-2",children:(0,a.jsx)("strong",{className:"text-white",children:"Defenses:"})}),(0,a.jsx)("p",{className:"text-gray-400",children:"Use -fstack-protector-strong, safe functions (snprintf, strlcpy), PIE+ASLR, W^X."})]}),(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:'2) "Safer copy" bug + indirect write'}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Concept:"}),' Even "safer" functions can be dangerous if used incorrectly (e.g., copying ',(0,a.jsx)("code",{className:"text-purple-400",children:"sizeof(buf) + k"}),"). Combine that with an accidental write (",(0,a.jsx)("code",{className:"text-purple-400",children:"*p = a"}),") to redirect control indirectly."]}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-6 mb-3",children:"Steps"}),(0,a.jsxs)("div",{className:"mb-6",children:[(0,a.jsx)("p",{className:"text-gray-300 mb-3",children:(0,a.jsx)("strong",{children:"Read the code path:"})}),(0,a.jsx)(h,{code:"If strncpy(buf, arg, sizeof(buf)+8) writes past the buffer,\nit corrupts adjacent locals (like p/a)."})]}),(0,a.jsxs)("p",{className:"text-gray-400 mb-3",children:[(0,a.jsx)("strong",{children:"Turn it into control:"})," Arrange values so the later write ",(0,a.jsx)("code",{className:"text-purple-400",children:"*p = a"})," stores a chosen address into a chosen location (write-what-where)."]}),(0,a.jsxs)("p",{className:"text-gray-400 mb-3",children:[(0,a.jsx)("strong",{children:"Target:"})," Overwrite the saved RET or a function pointer with the address of your sled/shellcode."]}),(0,a.jsx)("div",{className:"bg-zinc-900 border border-zinc-800 rounded-lg p-4 my-6",children:(0,a.jsxs)("p",{className:"text-sm text-gray-400",children:[(0,a.jsx)("strong",{className:"text-white",children:"Defenses:"})," Correct length math, remove unsafe post-copy writes, compiler hardening, and bounds-checked APIs."]})}),(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:"3) Beyond Strings: file-driven overflow using alloca(count*4) wrap"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Concept:"})," The program reads a 32-bit count then allocates ",(0,a.jsx)("code",{className:"text-purple-400",children:"count*4"})," bytes on the stack with ",(0,a.jsx)("code",{className:"text-purple-400",children:"alloca"}),". If ",(0,a.jsx)("code",{className:"text-purple-400",children:"count*4"})," overflows, the allocation becomes tiny but the read loop still writes count integers → a deterministic overflow."]}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-6 mb-3",children:"Steps"}),(0,a.jsxs)("div",{className:"space-y-4 mb-6",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:"Choose count to force wrap:"}),(0,a.jsx)(h,{code:"0x40000001 → count*4 == 4"})]}),(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:"Lay out the file:"}),(0,a.jsx)(h,{code:"[count][NOP sled + shellcode][padding to saved RET][RET overwrite]"})]}),(0,a.jsx)("div",{children:(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:"Run so the reader loop overwrites saved RET with your sled address."})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:"Verify:"}),(0,a.jsx)(h,{code:"In gdb, break after allocation, measure buf address and delta to RET,\nthen size the file accordingly."})]})]}),(0,a.jsx)("div",{className:"bg-zinc-900 border border-zinc-800 rounded-lg p-4 my-6",children:(0,a.jsxs)("p",{className:"text-sm text-gray-400",children:[(0,a.jsx)("strong",{className:"text-white",children:"Defenses:"})," Validate count and multiplication overflow; prefer heap with checks; add canaries."]})}),(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:"4) DEP/NX Bypass: ret2libc or ret2syscall"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Problem:"})," With DEP/NX, the stack is non-executable, so injected shellcode won't run."]}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-6 mb-3",children:"4a) ret2libc (dynamic binaries)"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Idea:"})," Don't execute stack bytes—return into libc and call existing functions."]}),(0,a.jsxs)("ul",{className:"space-y-3 mb-6 text-gray-400",children:[(0,a.jsx)("li",{children:"Find offset (e.g., 104)."}),(0,a.jsxs)("li",{children:["Addresses needed: ",(0,a.jsx)("code",{className:"text-purple-400",children:"system"}),", ",(0,a.jsx)("code",{className:"text-purple-400",children:"exit"}),", and ",(0,a.jsx)("code",{className:"text-purple-400",children:'"/bin/sh"'}),"."]}),(0,a.jsxs)("li",{children:["If symbols available: ",(0,a.jsx)(h,{code:'p system, find ... "/bin/sh"',inline:!0})]}),(0,a.jsxs)("li",{children:["If stripped: libc base (from ",(0,a.jsx)("code",{className:"text-purple-400",children:"info proc mappings"}),") + offsets → absolute addresses."]})]}),(0,a.jsx)(h,{code:'Payload: A*100 + B*4 + system + exit + "/bin/sh"'}),(0,a.jsxs)("p",{className:"text-gray-400 mt-4",children:[(0,a.jsx)("strong",{children:"Variation:"})," Use ",(0,a.jsx)("code",{className:"text-purple-400",children:"exit@plt"})," from your binary via ",(0,a.jsx)("code",{className:"text-purple-400",children:"objdump -d | grep @plt"}),"."]}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-8 mb-3",children:"4b) ret2syscall (static binaries, no libc)"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Idea:"})," ROP to set registers and trigger ",(0,a.jsx)("code",{className:"text-purple-400",children:"int 0x80"})," → ",(0,a.jsx)("code",{className:"text-purple-400",children:'execve("/bin/sh",0,0)'}),"."]}),(0,a.jsxs)("ul",{className:"space-y-3 mb-6 text-gray-400",children:[(0,a.jsx)("li",{children:"Find gadgets (pop/pop/ret, int 0x80) with objdump."}),(0,a.jsxs)("li",{children:["Chain sets ",(0,a.jsx)("code",{className:"text-purple-400",children:"eax=11"})," (execve), ",(0,a.jsx)("code",{className:"text-purple-400",children:'ebx=addr("/bin/sh")'}),", ",(0,a.jsx)("code",{className:"text-purple-400",children:"ecx=0"}),", ",(0,a.jsx)("code",{className:"text-purple-400",children:"edx=0"})," → ",(0,a.jsx)("code",{className:"text-purple-400",children:"int 0x80"}),"."]})]}),(0,a.jsx)("div",{className:"bg-zinc-900 border border-zinc-800 rounded-lg p-4 my-6",children:(0,a.jsxs)("p",{className:"text-sm text-gray-400",children:[(0,a.jsx)("strong",{className:"text-white",children:"Defenses:"})," Full ASLR, PIE, CFI, RELRO, and syscall filtering (seccomp)."]})}),(0,a.jsx)("h3",{className:"text-2xl font-bold text-white mt-8 mb-4",children:"5) Heap Unlink Exploitation (doubly-linked list)"}),(0,a.jsxs)("p",{className:"text-gray-300 mb-4",children:[(0,a.jsx)("strong",{children:"Concept:"})," A manual doubly-linked list performs:"]}),(0,a.jsx)(h,{code:"if (node->prev) node->prev->next = node->next;\nif (node->next) node->next->prev = node->prev;",language:"c"}),(0,a.jsx)("p",{className:"text-gray-400 mt-4 mb-6",children:"If you can overflow data to corrupt prev/next, deleting the node becomes a write-what-where."}),(0,a.jsx)("h4",{className:"text-xl font-semibold text-white mt-6 mb-3",children:"Steps"}),(0,a.jsxs)("div",{className:"space-y-4 mb-6",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:(0,a.jsx)("strong",{children:"Layout:"})}),(0,a.jsx)(h,{code:"struct node { prev; next; data[32]; }. Strings go into data via strcpy.",language:"c"})]}),(0,a.jsxs)("div",{children:[(0,a.jsxs)("p",{className:"text-gray-300 mb-2",children:[(0,a.jsx)("strong",{children:"Overflow forward"})," from node B into node C to set:"]}),(0,a.jsx)(h,{code:"c->prev = TARGET-4, c->next = VALUE"})]}),(0,a.jsx)("div",{children:(0,a.jsxs)("p",{className:"text-gray-300 mb-2",children:[(0,a.jsx)("strong",{children:"Delete(C)"})," → writes ",(0,a.jsx)("code",{className:"text-purple-400",children:"*(TARGET) = VALUE"})," (4-byte arbitrary write)."]})}),(0,a.jsx)("div",{children:(0,a.jsxs)("p",{className:"text-gray-300 mb-2",children:[(0,a.jsx)("strong",{children:"Target"})," a function pointer called at exit (e.g., ",(0,a.jsx)("code",{className:"text-purple-400",children:".fini_array/.dtors"}),"), set it to a heap trampoline: a short ",(0,a.jsx)("code",{className:"text-purple-400",children:"jmp +N"})," that lands in your real shellcode stored in A→data."]})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-gray-300 mb-2",children:(0,a.jsx)("strong",{children:"Verify:"})}),(0,a.jsx)(h,{code:"Inspect heap node addresses in gdb (finish after list_insert),\nconfirm pointer overwrite, then observe control at process exit."})]})]}),(0,a.jsx)("div",{className:"bg-zinc-900 border border-zinc-800 rounded-lg p-4 my-6",children:(0,a.jsxs)("p",{className:"text-sm text-gray-400",children:[(0,a.jsx)("strong",{className:"text-white",children:"Defenses:"})," Safe unlink checks, hardened allocators, RELRO, no raw strcpy into heap structs."]})})]}),(0,a.jsx)(x,{title:"Reliability & Hygiene",children:(0,a.jsxs)("ul",{className:"space-y-3 text-gray-400",children:[(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{className:"text-white",children:"NUL-safe bytes"})," in argv/file payloads (avoid ",(0,a.jsx)("code",{className:"text-purple-400",children:"\\x00"})," in addresses when passing via argv)."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{className:"text-white",children:"Endianness:"})," pack addresses little-endian (",(0,a.jsx)("code",{className:"text-purple-400",children:'"<I"'}),")."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{className:"text-white",children:"Repeatability:"})," control ASLR in the lab (",(0,a.jsx)("code",{className:"text-purple-400",children:"set disable-randomization on"}),") while you learn; test with ASLR to understand real-world stability."]}),(0,a.jsxs)("li",{children:[(0,a.jsx)("strong",{className:"text-white",children:"Gating:"})," Always verify where EIP lands (",(0,a.jsx)("code",{className:"text-purple-400",children:"x/i $eip"}),"), and prove overwrite distance with controlled patterns before dropping full chains."]})]})})]})]})})}function x(e){let{title:s,children:t}=e;return(0,a.jsxs)("div",{className:"mb-12",children:[(0,a.jsx)("h2",{className:"text-3xl font-bold text-white mb-6 border-b border-zinc-800 pb-3",children:s}),(0,a.jsx)("div",{className:"text-gray-300 space-y-4",children:t})]})}function h(e){let{code:s,language:t,inline:l}=e;return l?(0,a.jsx)("code",{className:"px-2 py-1 bg-zinc-900 text-purple-400 rounded text-sm font-mono",children:s}):(0,a.jsxs)("div",{className:"my-4 bg-zinc-950 border border-zinc-800 rounded-lg overflow-hidden",children:[(0,a.jsxs)("div",{className:"flex items-center gap-2 px-4 py-2 bg-zinc-900 border-b border-zinc-800",children:[(0,a.jsxs)("div",{className:"flex gap-1.5",children:[(0,a.jsx)("div",{className:"w-3 h-3 rounded-full bg-red-500"}),(0,a.jsx)("div",{className:"w-3 h-3 rounded-full bg-yellow-500"}),(0,a.jsx)("div",{className:"w-3 h-3 rounded-full bg-green-500"})]}),(0,a.jsxs)("div",{className:"flex items-center gap-2 ml-3",children:[(0,a.jsx)(i.Z,{className:"w-4 h-4 text-gray-500"}),(0,a.jsx)("span",{className:"text-xs text-gray-500 font-mono",children:t||"bash"})]})]}),(0,a.jsx)("div",{className:"p-4 font-mono text-sm",children:(0,a.jsx)("pre",{className:"text-green-400 whitespace-pre-wrap",children:s})})]})}}},function(e){e.O(0,[65,396,971,938,744],function(){return e(e.s=7949)}),_N_E=e.O()}]);